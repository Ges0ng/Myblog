##server.servlet.context-path=/
## 应用名称
#spring.application.name=blog
## 应用服务 WEB 访问端口
#server.port=8080
#
#
##数据源
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
##spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.url=jdbc:mysql://localhost:3306/blog?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=1212
#
##jpa    自动验证
#spring.jpa.hibernate.ddl-auto=update
##sql语句输出在控制台和日志的文件里面
#spring.jpa.show-sql=true
#
#
## THYMELEAF (ThymeleafAutoConfiguration)
## 开启模板缓存（默认值： true ）
#spring.thymeleaf.cache=false
## 检查模板是否存在，然后再呈现
#spring.thymeleaf.check-template=true
## 检查模板位置是否正确（默认值 :true ）
#spring.thymeleaf.check-template-location=true
##Content-Type 的值（默认值： text/html ）
#spring.thymeleaf.content-type=text/html
## 开启 MVC Thymeleaf 视图解析（默认值： true ）
#spring.thymeleaf.enabled=true
## 模板编码
#spring.thymeleaf.encoding=UTF-8
## 要被排除在解析之外的视图名称列表，⽤逗号分隔
#spring.thymeleaf.excluded-view-names=
## 要运⽤于模板之上的模板模式。另⻅ StandardTemplate-ModeHandlers( 默认值： HTML5)
#spring.thymeleaf.mode=HTML5
## 在构建 URL 时添加到视图名称前的前缀（默认值： classpath:/templates/ ）
#spring.thymeleaf.prefix=classpath:/templates/
## 在构建 URL 时添加到视图名称后的后缀（默认值： .html ）
#spring.thymeleaf.suffix=.html
#
#
#
##mybatis配置
##mybatis.mapper-locations=classpath:com/nmsl/mapper/*.xml
##mybatis.type-aliases-package=com.nmsl.entity
#
##配置日志
#logging.level.root=info
#logging.file.path=log/blog.log
#
#logging.level.com.nmsl=debug
#logging.level.com.service=info
#logging.level.com.controller=info
#
##视图
#spring.mvc.view.prefix=
#spring.mvc.view.suffix=.html


